<?php

namespace JC\CommandeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * InformationCollectiviteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InformationCollectiviteRepository extends EntityRepository
{
	
	public function findInfoPourCollectivitePourCleEtAnnee($collectivite, $cle, $annee){
		
		return $qb = $this
	    	->createQueryBuilder('ic')
			->where('ic.collectivite = :collectivite')
			->setParameter('collectivite', $collectivite)
			 
            ->andWhere('ic.cleRepartition > :cleRepartition')
           	->setParameter('cleRepartition', $cleRepartition)
           	
           	->andWhere('ic.annee = :annee')
           	->setParameter('annee', $annee)
			
			->getQuery()
	    	->getResult()
	    	;
	}
	
	
	
	
	public function findToutesInfosPourCollectiviteEtAnnee($collectivite, $annee){
		
		return $qb = $this
	    	->createQueryBuilder('ic')
	    	
	    	->leftJoin('ic.cleRepartition', 'cle')
			->addSelect('cle')
	    	
			->where('ic.collectivite = :collectivite')
			->setParameter('collectivite', $collectivite)
           	
           	->andWhere('ic.annee = :annee')
           	->setParameter('annee', $annee)
			
			->getQuery()
	    	->getResult()
	    	;
	}
	
	
	//On pourrai récupérer l'année dans commande..
	public function findSommeDeCleEtAnneePourCommande($cle, $annee, $commande){
		
		
		return $this
			->getEntityManager()
		    ->getRepository('JCCommandeBundle:CommandeConcerneCollectivite')
			
			->createQueryBuilder('ccc')
	        ->select('SUM(ic.nombre)')
	        ->leftJoin('JCCommandeBundle:InformationCollectivite', 'ic', 'WITH', 'ic.collectivite = ccc.collectivite')
	       
	        ->where('ccc.commande = :commande AND ic.cleRepartition =:cle')
	        ->setParameter('commande', $commande)
	        ->setParameter('cle', $commande->getActivite()->getCleRepartition())

   			->getQuery()
	    	->getSingleResult();
		
			}
	
	
	
	
	
	/*
	*	Recherche toutes les informations des collectivites mutualisée à une année donnée
	*/
	public function findInformationsPourAnnee($annee) {
		
		/* Pour voir le resultat que l'on veut sur PHPMyAdmin
			
			SELECT i0_.id AS id0, i0_.Nombre AS Nombre1, i0_.Annee AS Annee2, c2_.Nom AS cleRepartition_id3, c1_.Nom AS collectivite_id4 FROM InformationCollectivite i0_ LEFT JOIN CleRepartition c2_ ON (c2_.id = i0_.cleRepartition_id) LEFT JOIN Collectivite c1_ ON (c1_.id = i0_.collectivite_id) WHERE YEAR(c1_.Date_Debut_Mutualisation) <= '2014' AND YEAR(c1_.Date_Fin_Mutualisation) >= '2014' AND i0_.Annee = '2014' ORDER BY c1_.id ASC, c2_.id ASC
			
		*/
		
		
		return $this
			
			->createQueryBuilder('ic')
			->leftJoin('JCCommandeBundle:Collectivite', 'c', 'WITH', 'c = ic.collectivite')
			->leftJoin('JCCommandeBundle:CleRepartition', 'cr', 'WITH', 'cr = ic.cleRepartition')

			->where('year(c.dateDebutMutualisation) <= :annee AND year(c.dateFinMutualisation) >= :annee AND ic.annee = :annee')
		  	->setParameter('annee', $annee)
		  	
		  	//On trie par collectivite et par clé 
		  	->add('orderBy', 'cr.id ASC')
		  	->add('orderBy', 'c.id ASC')
   			
   			->getQuery()
			->getResult();
		
	}
		
	
	
}
